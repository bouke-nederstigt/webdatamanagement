xquery version "3.0";

module namespace app="http://localhost:8080/exist/apps/shakespear/templates";

import module namespace templates="http://exist-db.org/xquery/templates" ;
import module namespace config="http://localhost:8080/exist/apps/shakespear/config" at "config.xqm";

declare namespace transform="http://exist-db.org/xquery/transform";

(:~
 : This is a sample templating function. It will be called by the templating module if
 : it encounters an HTML element with an attribute dathttp://localhost:8080/exist/apps/eXide/index.html#a-template="app:test" 
 : or class="app:test" (deprecated). The function has to take at least 2 default
 : parameters. Additional parameters will be mapped to matching request or session parameters.
 : 
 : @param $node the HTML node with the attribute which triggered this call
 : @param $model a map containing arbitrary data - used to pass information between template calls
 :)
declare function app:test($node as node(), $model as map(*)) {
    <p>Dummy template output generated by function app:test at {current-dateTime()}. The templating
        function was triggered by the class attribute <code>class="app:test"</code>.</p>
};

(: ~
 :  Display list of all available plays
 : :)
 declare function app:plays($node as node(), $model as map(*)) {    
    let $style := doc("shakespeare/shakes.xsl")
    for $xml in collection("shakespeare")
    return
        transform:transform($xml/PLAY/TITLE, $style/PLAY, ())
 };

(: ~
 : Function to retrieve contents of a shakespeare play.
 : @param $play the Play that needs to be retrieves
 :)

declare function app:get_contents($node as node(), $model as map(*), $title as element()) {
    if($title) then
        <p> Display contents of {$title} </p>
    else
        ()
};

