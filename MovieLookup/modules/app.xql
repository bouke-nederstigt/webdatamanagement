xquery version "3.0";

module namespace app="http://exist/apps/movie-lookup/templates";

import module namespace templates="http://exist-db.org/xquery/templates" at "templates.xql";
import module namespace config="http://exist/apps/movie-lookup/config" at "config.xqm";

(:~
 : This is a sample templating function. It will be called by the templating module if
 : it encounters an HTML element with an attribute: data-template="app:test" or class="app:test" (deprecated). 
 : The function has to take 2 default parameters. Additional parameters are automatically mapped to
 : any matching request or function parameter.
 : 
 : @param $node the HTML node with the attribute which triggered this call
 : @param $model a map containing arbitrary data - used to pass information between template calls
 : 
 declare function app:test($node as node(), $model as map(*)) {
    <p>Dummy template output generated by function app:test at {current-dateTime()}. The templating
        function was triggered by the class attribute <code>class="app:test"</code>.</p>
};: 
 : 
 :)
declare function app:submit($node as node(), $model as map(*), $title as xs:string?, $genre as xs:string?, $director as xs:string?, $actor as xs:string?, $year as xs:string?, $summary as xs:string?
) {
    <results> {
        for $movie in doc("movies/movies.xml")/movies/movie
        where $title = $movie/title/text()
        return
            <movie>
                {Hello, $movie/title/text()}    
            </movie>
    }
    </results>
};
